'use strict';

exports.__esModule = true;
exports['default'] = createStore;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _Store = require('./Store');

var _Store2 = _interopRequireDefault(_Store);

var _utilsComposeReducers = require('./utils/composeReducers');

var _utilsComposeReducers2 = _interopRequireDefault(_utilsComposeReducers);

var _utilsComposeMiddleware = require('./utils/composeMiddleware');

var _utilsComposeMiddleware2 = _interopRequireDefault(_utilsComposeMiddleware);

var _middlewareThunk = require('./middleware/thunk');

var _middlewareThunk2 = _interopRequireDefault(_middlewareThunk);

var defaultMiddlewares = function defaultMiddlewares(_ref) {
  var dispatch = _ref.dispatch;
  var getState = _ref.getState;
  return [_middlewareThunk2['default']({ dispatch: dispatch, getState: getState })];
};

function createStore(reducer, initialState) {
  var middlewares = arguments[2] === undefined ? defaultMiddlewares : arguments[2];

  var finalReducer = typeof reducer === 'function' ? reducer : _utilsComposeReducers2['default'](reducer);

  var store = new _Store2['default'](finalReducer, initialState);
  var getState = store.getState.bind(store);

  var rawDispatch = store.dispatch.bind(store);
  var cookedDispatch = null;

  function dispatch(action) {
    return cookedDispatch(action);
  }

  var finalMiddlewares = typeof middlewares === 'function' ? middlewares({ dispatch: dispatch, getState: getState }) : middlewares;

  cookedDispatch = _utilsComposeMiddleware2['default'].apply(undefined, finalMiddlewares.concat([rawDispatch]));

  return {
    dispatch: cookedDispatch,
    subscribe: store.subscribe.bind(store),
    getState: store.getState.bind(store),
    getReducer: store.getReducer.bind(store),
    replaceReducer: store.replaceReducer.bind(store)
  };
}

module.exports = exports['default'];